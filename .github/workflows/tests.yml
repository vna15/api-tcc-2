name: Run Tests API
on:
  push:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Build and run Docker container
        run: docker-compose up --build -d

      - name: Check if Docker server is accessible
        run: sleep 5

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Save cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}

  unit_tests:
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Restore pip cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}

      - name: Build and run Docker container
        run: docker-compose up --build -d

      - name: Check if Docker server is accessible
        run: sleep 5

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run unit model tests
        run: python manage.py test users.tests.unitTests.tests_models

      - name: Run unit serializer tests
        run: python manage.py test users.tests.unitTests.tests_serializer

      - name: Run unit view tests
        run: python manage.py test users.tests.unitTests.tests_views

  functional_tests:
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Restore pip cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}

      - name: Build and run Docker container
        run: docker-compose up --build -d

      - name: Check if Docker server is accessible
        run: sleep 5

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run Robot Functional Tests
        run: robot users/tests/functionalTests/

  contract_tests:
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Restore pip cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}

      - name: Build and run Docker container
        run: docker-compose up --build -d

      - name: Check if Docker server is accessible
        run: sleep 5

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run contract tests
        run: python manage.py test users.tests.contractTests

  performance_tests:
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Restore pip cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}

      - name: Build and run Docker container
        run: docker-compose up --build -d

      - name: Check if Docker server is accessible
        run: sleep 5

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run performance test
        run: python manage.py test users.tests.performanceTests

  security_tests:
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Restore pip cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}

      - name: Build and run Docker container
        run: docker-compose up --build -d

      - name: Check if Docker server is accessible
        run: sleep 5

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run Robot Security Tests
        run: robot users/tests/securityTests/
